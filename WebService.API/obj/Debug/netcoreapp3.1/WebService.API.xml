<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebService.API</name>
    </assembly>
    <members>
        <member name="T:WebService.API.Controllers.AuthController">
            <summary>
            контроллер авторизации пользователей
            </summary>
        </member>
        <member name="M:WebService.API.Controllers.AuthController.#ctor(WebService.Domain.ServicesContract.IAuthService)">
            <summary>
            инициализация контроллера авторизации пользователей
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:WebService.API.Controllers.AuthController.AuthUser(WebService.Domain.Dto.AuthorizeQuery,System.Threading.CancellationToken)">
            <summary>
            авторизация
            </summary>
            <param name="ct"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:WebService.API.Controllers.PostController">
            <summary>
            контроллер обработки постов
            </summary>
        </member>
        <member name="M:WebService.API.Controllers.PostController.#ctor(WebService.Domain.ServicesContract.IPostService)">
            <summary>
            инициализация контроллера
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:WebService.API.Controllers.PostController.GetListPost(System.Threading.CancellationToken)">
            <summary>
            получение всех постов
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.GetCountPost(System.Threading.CancellationToken)">
            <summary>
            получение количества постов
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.GetPost(System.Int32,System.Threading.CancellationToken)">
            <summary>
            получение поста по id
            </summary>
            <param name="id"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.AddPost(WebService.Domain.Dto.Post.PostDto,System.Threading.CancellationToken)">
            <summary>
            добавление описания посту
            </summary>
            <param name="post"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.UpdatePost(System.Int32,WebService.Domain.Dto.Post.PostDto,System.Threading.CancellationToken)">
            <summary>
            изменение поста
            </summary>
            <param name="id"></param>
            <param name="post"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.UpdatePostFile(Microsoft.AspNetCore.Http.IFormCollection,System.Int32,System.Threading.CancellationToken)">
            <summary>
            добавление файлов посту
            </summary>
            <param name="files"></param>
            <param name="id"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.RemovePost(System.Int32,System.Threading.CancellationToken)">
            <summary>
            удаление поста
            </summary>
            <param name="id"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.RemovePostFile(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            удаление файла поста
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.PostController.DownloadFIle(WebService.Domain.Query.Post.LoadFileQuery,System.Threading.CancellationToken)">
            <summary>
            загрузка файла
            </summary>
            <param name="query"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:WebService.API.Controllers.TodoController">
            <summary>
            контроллер обрабатывающий запросы на получение информации по todo типу
            </summary>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.#ctor(WebService.Domain.ServicesContract.IToDoService)">
            <summary>
            инициализация контроллера
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.GetCountRecord(System.Int32,System.Threading.CancellationToken)">
            <summary>
            получение кол-ва записей
            </summary>
            <param name="IdUser"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.GetTodoRecords(WebService.Domain.Query.ToDo.GetToDoQuery,System.Threading.CancellationToken)">
            <summary>
            запрос на получение списка записей
            </summary>
            <param name="query"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.RemoveTodoRecord(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            удаление записи
            </summary>
            <param name="IdRecord"></param>
            <param name="IdUser"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.UpdateTodoRecord(WebService.Domain.Dto.ToDo.ToDoRecordDto,System.Int32,System.Threading.CancellationToken)">
            <summary>
            обновление записи
            </summary>
            <param name="record"></param>
            <param name="IdUser"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.AddTodoRecord(WebService.Domain.Dto.ToDo.ToDoRecordDto,System.Int32,System.Threading.CancellationToken)">
            <summary>
            добавление записи
            </summary>
            <param name="record"></param>
            <param name="IdUser"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.ExportRecord(WebService.Domain.Query.ToDo.GetToDoQuery,System.Threading.CancellationToken)">
            <summary>
            экспорт записей по фильтру
            </summary>
            <param name="query"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.ImportRecord(Microsoft.AspNetCore.Http.IFormFile,System.Int32,System.Threading.CancellationToken)">
            <summary>
            импорт записей
            </summary>
            <param name="file"></param>
            <param name="IdUser"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WebService.API.Controllers.TodoController.GetContentType(System.String)">
            <summary>
            определение типа контента
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
    </members>
</doc>
